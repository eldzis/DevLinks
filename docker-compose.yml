services:
  db:
    image: postgres:18-alpine
    environment:
      POSTGRES_USER: devlinks
      POSTGRES_PASSWORD: devlinks
      POSTGRES_DB: devlinks
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U devlinks']
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    command:
      [
        '/bin/sh',
        '-lc',
        'npm --workspace api run prisma:deploy && npm --workspace api run start:dev',
      ]
    working_dir: /app
    env_file:
      - ./apps/api/.env
    ports:
      - '3000:3000'
    volumes:
      - ./apps/api:/app/apps/api
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -sf http://localhost:3000/health/check > /dev/null || exit 1',
        ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    command:
      [
        'npm',
        '--workspace',
        'web',
        'run',
        'dev',
        '--',
        '--host',
        '0.0.0.0',
        '--port',
        '5173',
      ]
    working_dir: /app
    env_file:
      - ./apps/web/.env
    ports:
      - '5173:5173'
    volumes:
      - ./apps/web:/app/apps/web
    depends_on:
      api:
        condition: service_healthy

volumes:
  db_data:
